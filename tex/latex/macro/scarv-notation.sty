% Copyright (C) 2019 SCARV project <info@scarv.org>
%
% Use of this source code is restricted per the MIT license, a copy of which 
% can be found at https://opensource.org/licenses/MIT (or should be included 
% as LICENSE.txt within the associated archive or repository).

% =============================================================================

\DeclareMathOperator*{\argmin}{arg\,min}
\DeclareMathOperator*{\argmax}{arg\,max}
\DeclareMathOperator{\abs}{abs}
\DeclareMathOperator{\ext}{ext}

% RISC-V
\newcommandx{\RVXLEN}[1][1={}]{\IfEq{#1}{}{{\rm XLEN}}{{\rm #1-XLEN}}\xspace}
\newcommandx{\RVCUSTOM}[1]{\mbox{\em custom-#1}\xspace}

% fonts calligraphic (e.g., for mathematical spaces)
\newcommandx{\C}[1]{\ensuremath{\mathcal #1}\xspace}
% font: black board  (e.g., for mathematical structures)
\newcommandx{\B}[1]{\ensuremath{\mathbb  #1}\xspace}

% algorithm, identifier
\newcommandx{\ALG}[1]{\ensuremath\textsc{#1}\xspace}
\newcommandx{\ID}[1]{\textsf{#1}}

% instruction operand
\newcommandx{\OPER}[1]{\mbox{\tt #1}} % TODO: remove

% access via index or identifier in object
\newcommandx{\INDEX}[3][1={}]{\ensuremath{{#2}_{#3}^{#1}}\xspace}
\newcommandx{\FIELD}[2]{\ensuremath{{#1}[{#2}]}\xspace}
\newcommandx{\SCOPE}[2]{\ensuremath{{#1}.{#2}}\xspace}

% truth values
\newcommandx{\TRUE}{\mbox{\rm\bf true}\xspace}
\newcommandx{\FALSE}{\mbox{\rm\bf false}\xspace}

% radix
\newcommandx{\RADIX}[2]{\ensuremath{{#1}_{({#2})}}\xspace}

% assignment and definition
\newcommandx{\ASN}{\ensuremath{\leftarrow}\xspace}
\newcommandx{\DEF}{\ensuremath{:=}\xspace}

% random sample
\newcommandx{\RAND}{\ensuremath{\xleftarrow{\$}}\xspace}

% test
\newcommandx{\TEST}[1]{\ensuremath{\overset{?}{#1}}\xspace}

% range
\newcommandx{\RANGE}{\ensuremath{:}\xspace}

% cardinality
\newcommandx{\CARD}[1]{\ensuremath{|#1|}\xspace}

% least- and most-significant bits
\newcommandx{\LSB}[2][1={1}]{\ensuremath\textsc{LSB}_{\IfEq{#1}{1}{}{#1}}( #2 )\xspace}
\newcommandx{\MSB}[2][1={1}]{\ensuremath\textsc{MSB}_{\IfEq{#1}{1}{}{#1}}( #2 )\xspace}

% parity
\newcommandx{\PARITY}[1][1={}]{\ensuremath{\mathcal P}^{#1}\xspace}

% Hamming weight and distance
\newcommandx{\HW}{\ensuremath{\mathcal H}\xspace}
\newcommandx{\HD}{\ensuremath{\mathcal D}\xspace}

% qualified operator, wrt. size plus signed vs. unsigned
\newcommandx{\OP}[3][1={},2={}]{\ensuremath{#3}^{#1}_{#2}\xspace}

% zero or sign extension
\newcommandx{\EXT}[2][1={}]{\ensuremath\ext^{#1}_{#2}\xspace}

% concatination
\newcommandx{\CONS}{\ensuremath{\;\parallel\;}\xspace}

% polynomial indeterminent
\newcommandx{\IND}[1]{\ensuremath{\mbox{\bf #1}}\xspace}          

% set builder st.
\newcommandx{\ST}{\ensuremath{\;|\;}\xspace}

% left- and right-shift, and left- and right-rotate
\newcommandx{\LSH}{\ensuremath{\ll}\xspace}
\newcommandx{\RSH}{\ensuremath{\gg}\xspace}
\newcommandx{\LRT}{\ensuremath{\lll}\xspace}
\newcommandx{\RRT}{\ensuremath{\ggg}\xspace}

% Boolean operators
\newcommandx{\NAND}{\ensuremath{\;\overline{\wedge}\;}\xspace}
\newcommandx{\NIOR}{\ensuremath{\;\overline{\vee}\;}\xspace}
\newcommandx{\NXOR}{\ensuremath{\;\overline{\oplus}\;}\xspace}
\newcommandx{\XNOR}{\ensuremath{\;\overline{\oplus}\;}\xspace}
\newcommandx{\NOT}{\ensuremath{\neg  }\xspace}
\newcommandx{\AND}{\ensuremath{\wedge}\xspace}
\newcommandx{\IOR}{\ensuremath{\vee  }\xspace}
\newcommandx{\XOR}{\ensuremath{\oplus}\xspace}

% round key etc.
\newcommandx{\ROUND}[2]{\ensuremath{#1}^{(#2)}}                   

% type- or structure-annotated operators
\newcommandx{\SID}[2][1={}]{#2_{\mathsmaller{#1}}}
\newcommandx{\SADD}[1][1={}]{\ensuremath{\oplus_{\mathsmaller{#1}}}\xspace}
\newcommandx{\SSUB}[1][1={}]{\ensuremath{\ominus_{\mathsmaller{#1}}}\xspace}
\newcommandx{\SDOT}[1][1={}]{\ensuremath{\odot_{\mathsmaller{#1}}}\xspace}
\newcommandx{\SMUL}[1][1={}]{\ensuremath{\otimes_{\mathsmaller{#1}}}\xspace}
\newcommandx{\SDIV}[1][1={}]{\ensuremath{\oslash_{\mathsmaller{#1}}}\xspace}

% collections
\newcommandx{\TUPLE}[1]{\ensuremath{({#1})}\xspace}
\newcommandx{\TABLE}[1]{\ensuremath{[{#1}]}\xspace}
\newcommandx{\LIST}[1]{\ensuremath{\langle{#1}\rangle}\xspace}
\newcommandx{\SET}[1]{\ensuremath{\{{#1}\}}\xspace}

% architectural resources
\newcommandx{\RNG}{{\ensuremath{\sf RNG}}\xspace}
\newcommandx{\MEM}[2][1={},2={}     ]{{\ensuremath\IfEq{#1}{*}{{\sf MEM}[{#2}]}{{\sf MEM}}}\xspace}
\newcommandx{\GPR}[2][1={},2={}     ]{{\ensuremath\IfEq{#1}{*}{{\sf GPR}[{#2}]}{{\sf GPR}}}\xspace}
\newcommandx{\CPR}[2][1={},2={}     ]{{\ensuremath\IfEq{#1}{*}{{\sf CPR}[{#2}]}{{\sf CPR}}}\xspace} % TODO: remove
\newcommandx{\SPR}[3][     2={},3={}]{{\ensuremath\IfEq{#2}{*}{{\sf  #1}[{#3}]}{{\sf  #1}}}\xspace}

% references
\newcommandx{\SEC}[1][1={}]{\IfEq{#1}{s}{Sections}{Section}\xspace}
\newcommandx{\TAB}[1][1={}]{\IfEq{#1}{s}{Tables}{Table}\xspace}
\newcommandx{\FIG}[1][1={}]{\IfEq{#1}{s}{Figures}{Figure}\xspace}
\newcommandx{\APPX}[1][1={}]{\IfEq{#1}{s}{Appendices}{Appendix}\xspace}
\newcommandx{\REFSEC}[1]{\SEC~\ref{#1}\xspace}
\newcommandx{\REFTAB}[1]{\TAB~\ref{#1}\xspace}
\newcommandx{\REFFIG}[1]{\FIG~\ref{#1}\xspace}
\newcommandx{\REFAPPX}[1]{\APPX~\ref{#1}\xspace}

% verbatim macro: inline
\newcommand{\VERB}[2][]{\mbox{\lstinline[style={inline},language={#1}]`#2`}}
% verbatim macro:  block
\lstnewenvironment{MKVERB}[1][]{\lstset{basicstyle=\ttfamily,#1}}{}

% verbatim style: inline
\lstdefinestyle{inline}{
  escapechar={¬},
  basicstyle=\ttfamily, 
  keywordstyle=\ttfamily, 
  breakautoindent=false,
  breaklines=false,
  breakatwhitespace=false,
  keepspaces=true,
  showstringspaces=false
}
% verbatim style: float
\lstdefinestyle{float}{
  escapechar={¬},
  basicstyle=\ttfamily\scriptsize,  
  breakautoindent=false,
  breaklines=false,
  breakatwhitespace=false,
  keepspaces=true,
  showstringspaces=false,
  frame=single
}
% verbatim style: block
\lstdefinestyle{block}{
  escapechar={¬},
  basicstyle=\ttfamily\scriptsize,  
  breakautoindent=false,
  breaklines=false,
  breakatwhitespace=false,
  keepspaces=true,
  showstringspaces=false,
  frame=single
}
% verbatim language
\lstalias{RV}{C}

% =============================================================================
